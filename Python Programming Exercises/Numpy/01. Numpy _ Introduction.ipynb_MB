{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1EpYhDRHbka7xP5ETD8C2hEfdMp0EGWUH","timestamp":1730113026781}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"s6odsFbLpgIh"},"source":["# NumPy : Introduction\n","\n","**NumPy allows you to manipulate data in the form of an array.**\n","\n","**Complete the missions below using NumPy.**"]},{"cell_type":"code","metadata":{"id":"sXzBVR4imVvO","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1730119967153,"user_tz":-60,"elapsed":624,"user":{"displayName":"maxime busc","userId":"02237789365269760893"}},"outputId":"27deaa77-0508-4860-bfba-db6ebc29b3ff"},"source":["import numpy as np # Here we rename numpy as np, it's shorter, and everybody does that\n","\n","# Mission 1 : Display the version of NumPy you are running (as each library, you can use np.__version__)\n","np.__version__\n"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1.26.4'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"vQGzQgU-phGc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730113602759,"user_tz":-60,"elapsed":340,"user":{"displayName":"maxime busc","userId":"02237789365269760893"}},"outputId":"6374c952-0594-4e88-a0c8-19b63f7cd20f"},"source":["# Mission 2 : Create a NumPy array with a length of 3, that contains this 3 floats: 0.8, 0.6, 0.4\n","# Expected result: array([0.8, 0.6, 0.4])\n","\n","a=np.array([0.8,0.6,0.4])\n","a"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.8, 0.6, 0.4])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"66-o1bXYqPC_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730114137393,"user_tz":-60,"elapsed":605,"user":{"displayName":"maxime busc","userId":"02237789365269760893"}},"outputId":"be013784-a22c-4197-93aa-b55223fa1567"},"source":["# Mission 3 : Create a function that uses the np.random.random() function to return an array with 10 random elements,\n","# all of which must be greater than 0.25 and less than 1.0\n","# Example of expected result: array([0.3897948 , 0.82850041, 0.5499838 , 0.81940137, 0.92175875, 0.89634373, 0.26821861, 0.72376496, 0.81098623, 0.28192741])\n","\n","\n","def generate_random_array():\n","  random_array = []\n","  while len(random_array) < 10:\n","    value = np.random.random()  # Generate a random value between 0 and 1\n","    if 0.25 < value < 1.0:  # Check if it's in the desired range\n","      random_array.append(value)  # Add to the list if it is\n","  return np.array(random_array)  # Convert the list to a NumPy array\n","\n","generate_random_array()\n","\n","\n"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.3714217 , 0.38617138, 0.41158315, 0.88213828, 0.53733219,\n","       0.44784336, 0.48934398, 0.33698669, 0.73670576, 0.35769799])"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"hx8Ck-neqRZe","executionInfo":{"status":"ok","timestamp":1730114468297,"user_tz":-60,"elapsed":493,"user":{"displayName":"maxime busc","userId":"02237789365269760893"}}},"source":["# Mission 4 : What does the np.empty() method do? Don't just copy the documentation, explain in your own words here\n","\n","#The numpy.empty() method is used to create a new array without initializing entries, without giving any elements of what it should be filled with.\n","#When using the np.empty() method, we just have to indicate the shape. We can indicate too the type and order. It should look like this :\n","#np.empty(shape, dtype=float, order='C') (float and C being examples)\n","# This method is It is usually used for large arrays when performance is critical, and the values can/should be filled in later."],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"q_BJsGjwqTQp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730114620034,"user_tz":-60,"elapsed":380,"user":{"displayName":"maxime busc","userId":"02237789365269760893"}},"outputId":"f56ed5a2-f71d-4721-9709-33922fc9a05f"},"source":["# Mission 5 : Create an array filled with only zeros. You can choose the length of this array.\n","b= np.zeros((8))\n","b"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 0., 0., 0., 0., 0., 0., 0.])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"KhQZPyHhqUql","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730120449403,"user_tz":-60,"elapsed":602,"user":{"displayName":"maxime busc","userId":"02237789365269760893"}},"outputId":"0869c25c-3d46-4cc1-b959-ecb61a876db1"},"source":["# Mission 6 : Create an array filled with 10 random integers.\n","c = np.random.randint(100,size=10)\n","c"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([91, 64, 75, 72, 23, 86, 28, 64, 82, 50])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"v3vqX26BqWTo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1730120067926,"user_tz":-60,"elapsed":611,"user":{"displayName":"maxime busc","userId":"02237789365269760893"}},"outputId":"6c816afd-940e-4387-9e73-d3d4966cba63"},"source":["# Mission 7 : Create an array that contains 50 values randomly selected only from these numbers: 0, 1, 2, 3, 4, 5, 6, 7.\n","\n","# Define the set of numbers to choose from\n","numbers = np.array([0, 1, 2, 3, 4, 5, 6, 7])\n","# Use np.random.choice to randomly select 50 values from the set\n","random_selection = np.random.choice(numbers, size=50)\n","\n","random_selection\n"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7, 7, 5, 7, 6, 5, 3, 3, 0, 2, 0, 3, 6, 6, 2, 5, 7, 0, 1, 0, 5, 1,\n","       7, 0, 5, 4, 7, 0, 6, 2, 3, 1, 1, 0, 4, 4, 2, 6, 4, 6, 6, 7, 1, 5,\n","       4, 7, 0, 2, 4, 2])"]},"metadata":{},"execution_count":7}]}]}